{
  "apiVersion": "template.openshift.io/v1",
  "kind": "Template",
  "metadata": {
    "annotations": {
      "openshift.io/display-name": "Red Hat Fuse 7.11 Camel RHOSAK with Karaf",
      "openshift.io/provider-display-name": "Red Hat, Inc.",
      "description": "A simple Camel route for Red Hat OpenShift Streams for Apache Kafka. This quickstart shows a simple Apache Camel application that connects with Red Hat OpenShift Streams for Apache Kafka.",
      "tags": "quickstart,java,karaf,fis,jboss-fuse,rhosak",
      "iconClass": "icon-rh-integration",
      "version": "1.11"
    },
    "name": "s2i-fuse711-karaf-camel-rhosak"
  },
  "labels": {
    "template": "s2i-fuse711-karaf-camel-rhosak"
  },
  "parameters": [
    {
      "name": "APP_NAME",
      "displayName": "Application Name",
      "required": true,
      "value": "s2i-fuse711-karaf-camel-rhosak",
      "description": "The name assigned to the application."
    },
    {
      "name": "GIT_REPO",
      "displayName": "Git Repository URL",
      "value": "https://github.com/fabric8-quickstarts/karaf-camel-rhosak.git",
      "required": true,
      "description": "The URL of the repository with your application source code."
    },
    {
      "name": "GIT_REF",
      "displayName": "Git Reference",
      "value": "karaf-camel-rhosak-7.11.1.fuse-sb2-7_11_1-00007-redhat-00001",
      "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
    },
    {
      "name": "KAFKA_BROKERS",
      "displayName": "Kafka brokers",
      "required": true,
      "description": "URL of the Kafka brokers to use. The format is 'host1:port1,host2:port2' and the list can be a subset of brokers or a VIP pointing to a subset of brokers. This option is known as bootstrap.servers in the Kafka documentation"
    },
    {
      "name": "SA_CLIENT_ID",
      "displayName": "Kafka Broker Service Account Client ID",
      "required": true,
      "description": "The Service Account Client ID used to authenticate with the A-MQ broker."
    },
    {
      "name": "SA_CLIENT_SECRET",
      "displayName": "Kafka Broker Service Account Client Secret",
      "required": true,
      "description": "The Service Account Client Secret used to authenticate with the A-MQ broker."
    },
    {
      "name": "TOPIC_NAME",
      "displayName": "Kafka Topic Name",
      "required": true,
      "value": "test",
      "description": "Name of the topic to use. On the consumer you can use comma to separate multiple topics. A producer can only send a message to a single topic."
    },
    {
      "name": "CONSUMER_GROUP_ID",
      "displayName": "Kafka Consumer Group ID",
      "required": true,
      "value": "kafkaGroup",
      "description": "A string that uniquely identifies the group of consumer processes to which this consumer belongs. By setting the same group id multiple processes indicate that they are all part of the same consumer group. This option is required for consumers."
    },
    {
      "name": "SEEK_TO_STRATEGY",
      "displayName": "Kafka seek to strategy",
      "required": true,
      "value": "beginning",
      "description": "Set if Kafka Consumer will read from beginning or end on startup"
    },
    {
      "name": "MAX_POLL_RECORDS",
      "displayName": "Kafka Max Poll Records",
      "required": true,
      "value": "5000",
      "description": "The maximum number of records returned in a single call to poll()."
    },
    {
      "name": "KAFKA_CONSUMERS_COUNT",
      "displayName": "Kafka Consumer Count",
      "required": true,
      "value": "1",
      "description": "The number of consumers that connect to kafka server."
    },
    {
      "name": "BUILDER_VERSION",
      "displayName": "Builder version",
      "value": "1.11",
      "description": "The version of the FIS S2I builder image to use."
    },
    {
      "name": "APP_VERSION",
      "displayName": "Application Version",
      "value": "7.11.1.fuse-sb2-7_11_1-00007-redhat-00001",
      "description": "The application version."
    },
    {
      "name": "MAVEN_ARGS",
      "displayName": "Maven Arguments",
      "value": "install -DskipTests -Djkube.skip -e -B",
      "description": "Arguments passed to mvn in the build."
    },
    {
      "name": "MAVEN_ARGS_APPEND",
      "displayName": "Extra Maven Arguments",
      "description": "Extra arguments passed to mvn, e.g. for multi-module builds."
    },
    {
      "displayName": "Maven mirror URL",
      "description": "Maven mirror to use for S2I builds.",
      "name": "MAVEN_MIRROR_URL",
      "required": false
    },
    {
      "name": "ARTIFACT_DIR",
      "displayName": "Maven build directory",
      "description": "Directory of the artifact to be built, e.g. for multi-module builds."
    },
    {
      "name": "IMAGE_STREAM_NAMESPACE",
      "displayName": "Image Stream Namespace",
      "value": "openshift",
      "required": true,
      "description": "Namespace in which the Fuse ImageStreams are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project."
    },
    {
      "name": "BUILD_SECRET",
      "displayName": "Git Build Secret",
      "generate": "expression",
      "description": "The secret needed to trigger a build.",
      "from": "[a-zA-Z0-9]{40}"
    },
    {
      "name": "CPU_REQUEST",
      "displayName": "CPU request",
      "value": "0.2",
      "required": true,
      "description": "The amount of CPU to request."
    },
    {
      "name": "MEMORY_REQUEST",
      "displayName": "Memory request",
      "value": "128Mi",
      "required": true,
      "description": "The amount of memory required for the container to run."
    },
    {
      "name": "CPU_LIMIT",
      "displayName": "CPU limit",
      "value": "1.0",
      "required": true,
      "description": "The amount of CPU the container is limited to use."
    },
    {
      "name": "MEMORY_LIMIT",
      "displayName": "Memory limit",
      "value": "512Mi",
      "required": true,
      "description": "The amount of memory the container is limited to use."
    },
    {
      "name": "BUILD_MEMORY_REQUEST",
      "displayName": "Build Memory request",
      "value": "0.7G",
      "required": true,
      "description": "The amount of memory to request for builds."
    },
    {
      "name": "BUILD_MEMORY_LIMIT",
      "displayName": "Build Memory limit",
      "value": "1G",
      "required": true,
      "description": "The amount of memory the build container is limited to use."
    }
  ],
  "objects": [
    {
      "kind": "ImageStream",
      "apiVersion": "image.openshift.io/v1",
      "metadata": {
        "name": "${APP_NAME}",
        "creationTimestamp": null,
        "labels": {
          "component": "${APP_NAME}",
          "container": "karaf",
          "group": "quickstarts",
          "app": "${APP_NAME}",
          "provider": "s2i",
          "version": "${APP_VERSION}"
        }
      },
      "spec": {},
      "status": {
        "dockerImageRepository": ""
      }
    },
    {
      "kind": "BuildConfig",
      "apiVersion": "build.openshift.io/v1",
      "metadata": {
        "name": "${APP_NAME}",
        "creationTimestamp": null,
        "labels": {
          "component": "${APP_NAME}",
          "container": "karaf",
          "group": "quickstarts",
          "app": "${APP_NAME}",
          "provider": "s2i",
          "version": "${APP_VERSION}"
        }
      },
      "spec": {
        "triggers": [
          {
            "type": "GitHub",
            "github": {
              "secret": "${BUILD_SECRET}"
            }
          },
          {
            "type": "Generic",
            "generic": {
              "secret": "${BUILD_SECRET}"
            }
          },
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChange": {}
          }
        ],
        "source": {
          "type": "Git",
          "git": {
            "uri": "${GIT_REPO}",
            "ref": "${GIT_REF}"
          }
        },
        "strategy": {
          "type": "Source",
          "sourceStrategy": {
            "from": {
              "kind": "ImageStreamTag",
              "namespace": "${IMAGE_STREAM_NAMESPACE}",
              "name": "fuse7-karaf-openshift:${BUILDER_VERSION}"
            },
            "forcePull": true,
            "incremental": true,
            "env": [
              {
                "name": "BUILD_LOGLEVEL",
                "value": "5"
              },
              {
                "name": "ARTIFACT_DIR",
                "value": "${ARTIFACT_DIR}"
              },
              {
                "name": "MAVEN_ARGS",
                "value": "${MAVEN_ARGS}"
              },
              {
                "name": "MAVEN_ARGS_APPEND",
                "value": "${MAVEN_ARGS_APPEND}"
              },
              {
                "name": "MAVEN_MIRROR_URL",
                "value": "${MAVEN_MIRROR_URL}"
              }
            ]
          }
        },
        "output": {
          "to": {
            "kind": "ImageStreamTag",
            "name": "${APP_NAME}:latest"
          }
        },
        "resources": {
          "requests": {
            "memory": "${BUILD_MEMORY_REQUEST}"
          },
          "limits": {
            "memory": "${BUILD_MEMORY_LIMIT}"
          }
        }
      },
      "status": {
        "lastVersion": 0
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "apps.openshift.io/v1",
      "metadata": {
        "name": "${APP_NAME}",
        "creationTimestamp": null,
        "labels": {
          "component": "${APP_NAME}",
          "container": "karaf",
          "group": "quickstarts",
          "app": "${APP_NAME}",
          "provider": "s2i",
          "version": "${APP_VERSION}"
        }
      },
      "spec": {
        "triggers": [
          {
            "type": "ConfigChange"
          },
          {
            "type": "ImageChange",
            "imageChangeParams": {
              "automatic": true,
              "containerNames": [
                "${APP_NAME}"
              ],
              "from": {
                "kind": "ImageStreamTag",
                "name": "${APP_NAME}:latest"
              }
            }
          }
        ],
        "replicas": 1,
        "selector": {
          "component": "${APP_NAME}",
          "container": "karaf",
          "deploymentconfig": "${APP_NAME}",
          "group": "quickstarts",
          "app": "${APP_NAME}",
          "provider": "s2i",
          "version": "${APP_VERSION}"
        },
        "template": {
          "metadata": {
            "creationTimestamp": null,
            "labels": {
              "component": "${APP_NAME}",
              "container": "karaf",
              "deploymentconfig": "${APP_NAME}",
              "group": "quickstarts",
              "app": "${APP_NAME}",
              "provider": "s2i",
              "version": "${APP_VERSION}",
              "com.company": "Red_Hat",
              "rht.prod_name": "Red_Hat_Integration",
              "rht.prod_ver": "7.11.1",
              "rht.comp": "${APP_NAME}",
              "rht.comp_ver": "${APP_VERSION}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "${APP_NAME}",
                "image": "library/${APP_NAME}:latest",
                "readinessProbe": {
                  "httpGet": {
                    "path": "/readiness-check",
                    "port": 8181
                  },
                  "initialDelaySeconds": 10
                },
                "livenessProbe": {
                  "httpGet": {
                    "path": "/health-check",
                    "port": 8181
                  },
                  "initialDelaySeconds": 180
                },
                "ports": [
                  {
                    "containerPort": 8181,
                    "name": "http"
                  },
                  {
                    "containerPort": 8778,
                    "name": "jolokia"
                  }
                ],
                "env": [
                  {
                    "name": "KUBERNETES_NAMESPACE",
                    "valueFrom": {
                      "fieldRef": {
                        "fieldPath": "metadata.namespace"
                      }
                    }
                  },
                  {
                    "name": "JAVA_OPTIONS",
                    "value": "-Dfabric8.cm.bridge.enabled=false -Dfabric8.config.plugin.enabled=false -Dkafka.brokers=${KAFKA_BROKERS} -Dtopic.name=${TOPIC_NAME} -Dconsumer.group=${CONSUMER_GROUP_ID} -Dconsumer.maxPollRecords=${MAX_POLL_RECORDS} -Dconsumer.consumersCount=${KAFKA_CONSUMERS_COUNT} -Dconsumer.seekTo=${SEEK_TO_STRATEGY} -Dsa.client.id=${SA_CLIENT_ID} -Dsa.client.secret=${SA_CLIENT_SECRET}"
                  }
                ],
                "resources": {
                  "requests": {
                    "cpu": "${CPU_REQUEST}",
                    "memory": "${MEMORY_REQUEST}"
                  },
                  "limits": {
                    "cpu": "${CPU_LIMIT}",
                    "memory": "${MEMORY_LIMIT}"
                  }
                }
              }
            ]
          }
        }
      }
    }
  ]
}
